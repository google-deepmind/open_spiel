name: Build Wheels (DISABLED - use wheels.yml instead)

# Disabled to avoid conflicts with wheels.yml - remove this file once wheels.yml is stable
on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows builds
          - os: windows-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.12'
          - os: windows-latest
            python-version: '3.13'
          # Ubuntu builds
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.10'
          - os: ubuntu-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.12'
          - os: ubuntu-latest
            python-version: '3.13'
          # macOS builds
          - os: macos-latest
            python-version: '3.9'
          - os: macos-latest
            python-version: '3.10'
          - os: macos-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.12'
          - os: macos-latest
            python-version: '3.13'

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build wheel setuptools

    - name: Clone dependencies
      shell: bash
      run: |
        echo "Cloning dependencies..."
        git clone -b master --single-branch --depth 1 https://github.com/pybind/pybind11.git pybind11
        git clone -b 20250127.1 --single-branch --depth 1 https://github.com/abseil/abseil-cpp.git open_spiel/abseil-cpp
        git clone -b master https://github.com/nlohmann/json.git open_spiel/json
        git clone -b master https://github.com/pybind/pybind11_json.git open_spiel/pybind11_json
        git clone -b master https://github.com/pybind/pybind11_abseil.git open_spiel/pybind11_abseil
        git clone -b develop --single-branch --depth 1 https://github.com/jblespiau/dds.git open_spiel/games/bridge/double_dummy_solver
        
        # Checkout specific commits for stability
        cd open_spiel/json && git checkout 9cca280a4d0ccf0c08f47a99aa71d1b0e52f8d03 && cd ../..
        cd open_spiel/pybind11_json && git checkout d0bf434be9d287d73a963ff28745542daf02c08f && cd ../..
        cd open_spiel/pybind11_abseil && git checkout 73992b5 && cd ../..
        
        echo "Verifying dependencies..."
        ls -la open_spiel/json/CMakeLists.txt || echo "WARNING: json CMakeLists.txt not found"
        ls -la open_spiel/pybind11_json/CMakeLists.txt || echo "WARNING: pybind11_json CMakeLists.txt not found"

    - name: Build wheel
      run: python -m build --wheel --outdir dist/

    - name: Test wheel installation
      shell: bash
      run: |
        python -m pip install dist/*.whl
        python -c "import pyspiel; game = pyspiel.load_game('tic_tac_toe'); print('OpenSpiel works! Game:', game.get_type().short_name)"
        
    - name: Run comprehensive tests
      shell: bash
      run: |
        python test_installation.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/*.whl