name: Build Wheels

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install CMake (Windows)
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        refreshenv

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build wheel setuptools

    - name: Clone dependencies
      run: |
        git clone --single-branch --depth 1 https://github.com/pybind/pybind11.git pybind11
        git clone -b 20211102.0 --single-branch --depth 1 https://github.com/abseil/abseil-cpp.git open_spiel/abseil-cpp
        git clone -b master https://github.com/pybind/pybind11_abseil.git open_spiel/pybind11_abseil
        cd open_spiel/pybind11_abseil && git checkout 73992b5 && cd ../..
        git clone -b develop --single-branch --depth 1 https://github.com/nlohmann/json.git open_spiel/json
        git clone --single-branch --depth 1 https://github.com/pybind/pybind11_json.git open_spiel/pybind11_json
        git clone -b develop --single-branch --depth 1 https://github.com/jblespiau/dds.git open_spiel/games/bridge/double_dummy_solver

    - name: Build wheel
      run: python -m build --wheel --outdir dist/

    - name: Test wheel installation
      run: |
        python -m pip install dist/*.whl
        python -c "import sys, site, os; user_site = site.getusersitepackages(); release_path = os.path.join(user_site, 'Release'); sys.path.insert(0, release_path) if os.path.exists(release_path) else None; import pyspiel; game = pyspiel.load_game('tic_tac_toe'); print('âœ… OpenSpiel works! Game:', game.get_type().short_name)"

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist/*/