game: liars_dice_ir

GameType.chance_mode = ChanceMode.EXPLICIT_STOCHASTIC
GameType.dynamics = Dynamics.SEQUENTIAL
GameType.information = Information.IMPERFECT_INFORMATION
GameType.long_name = "Liars Dice with Imperfect Recall"
GameType.max_num_players = 2
GameType.min_num_players = 2
GameType.parameter_specification = ["bidding_rule", "dice_sides", "numdice", "players", "recall_length"]
GameType.provides_information_state_string = True
GameType.provides_information_state_tensor = False
GameType.provides_observation_string = False
GameType.provides_observation_tensor = False
GameType.provides_factored_observation_string = False
GameType.reward_model = RewardModel.TERMINAL
GameType.short_name = "liars_dice_ir"
GameType.utility = Utility.ZERO_SUM

NumDistinctActions() = 13
PolicyTensorShape() = [13]
MaxChanceOutcomes() = 6
GetParameters() = {bidding_rule=reset-face,dice_sides=6,numdice=1,players=2,rollout_length=4}
NumPlayers() = 2
MinUtility() = -1.0
MaxUtility() = 1.0
UtilitySum() = 0.0
MaxGameLength() = 13
ToString() = "liars_dice_ir()"

# State 0
# -1 -1 - chance node, current roller is player 0
IsTerminal() = False
History() = []
HistoryString() = ""
IsChanceNode() = True
IsSimultaneousNode() = False
CurrentPlayer() = -1
InformationStateString(0) = "P0 -1"
InformationStateString(1) = "P1 -1"
ChanceOutcomes() = [(0,0.166667), (1,0.166667), (2,0.166667), (3,0.166667), (4,0.166667), (5,0.166667)]
LegalActions() = [0, 1, 2, 3, 4, 5]
StringLegalActions() = ["Roll 1", "Roll 2", "Roll 3", "Roll 4", "Roll 5", "Roll 6"]

# Apply action "Roll 1"
action: 0

# State 1
# 1 -1 - chance node, current roller is player 1
IsTerminal() = False
History() = [0]
HistoryString() = "0"
IsChanceNode() = True
IsSimultaneousNode() = False
CurrentPlayer() = -1
InformationStateString(0) = "P0 1"
InformationStateString(1) = "P1 -1"
ChanceOutcomes() = [(0,0.166667), (1,0.166667), (2,0.166667), (3,0.166667), (4,0.166667), (5,0.166667)]
LegalActions() = [0, 1, 2, 3, 4, 5]
StringLegalActions() = ["Roll 1", "Roll 2", "Roll 3", "Roll 4", "Roll 5", "Roll 6"]

# Apply action "Roll 2"
action: 1

# State 2
# 1 2
IsTerminal() = False
History() = [0, 1]
HistoryString() = "0, 1"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = 0
InformationStateString(0) = "P0 1"
InformationStateString(1) = "P1 2"
Rewards() = [0, 0]
Returns() = [0, 0]
LegalActions() = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
StringLegalActions() = ["1-1", "1-2", "1-3", "1-4", "1-5", "1-6", "2-1", "2-2", "2-3", "2-4", "2-5", "2-6"]

# Apply action "2-1"
action: 6

# State 3
# 1 2 2-1
IsTerminal() = False
History() = [0, 1, 6]
HistoryString() = "0, 1, 6"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = 1
InformationStateString(0) = "P0 1 2-1"
InformationStateString(1) = "P1 2 2-1"
Rewards() = [0, 0]
Returns() = [0, 0]
LegalActions() = [7, 8, 9, 10, 11, 12]
StringLegalActions() = ["2-2", "2-3", "2-4", "2-5", "2-6", "Liar"]

# Apply action "2-4"
action: 9

# State 4
# 1 2 2-1 2-4
IsTerminal() = False
History() = [0, 1, 6, 9]
HistoryString() = "0, 1, 6, 9"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = 0
InformationStateString(0) = "P0 1 2-1 2-4"
InformationStateString(1) = "P1 2 2-1 2-4"
Rewards() = [0, 0]
Returns() = [0, 0]
LegalActions() = [10, 11, 12]
StringLegalActions() = ["2-5", "2-6", "Liar"]

# Apply action "Liar"
action: 12

# State 5
# 1 2 2-1 2-4 Liar
IsTerminal() = True
History() = [0, 1, 6, 9, 12]
HistoryString() = "0, 1, 6, 9, 12"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = -4
InformationStateString(0) = "P0 1 2-1 2-4 Liar"
InformationStateString(1) = "P1 2 2-1 2-4 Liar"
Rewards() = [1, -1]
Returns() = [1, -1]
