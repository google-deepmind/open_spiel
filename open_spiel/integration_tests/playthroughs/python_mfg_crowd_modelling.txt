game: python_mfg_crowd_modelling

GameType.chance_mode = ChanceMode.EXPLICIT_STOCHASTIC
GameType.dynamics = Dynamics.MEAN_FIELD
GameType.information = Information.PERFECT_INFORMATION
GameType.long_name = "Python Mean Field Crowd Modelling"
GameType.max_num_players = 1
GameType.min_num_players = 1
GameType.parameter_specification = ["horizon", "size"]
GameType.provides_information_state_string = True
GameType.provides_information_state_tensor = False
GameType.provides_observation_string = True
GameType.provides_observation_tensor = True
GameType.provides_factored_observation_string = False
GameType.reward_model = RewardModel.REWARDS
GameType.short_name = "python_mfg_crowd_modelling"
GameType.utility = Utility.GENERAL_SUM

NumDistinctActions() = 3
PolicyTensorShape() = [3]
MaxChanceOutcomes() = 10
GetParameters() = {horizon=10,size=10}
NumPlayers() = 1
MinUtility() = -inf
MaxUtility() = inf
UtilitySum() = None
ObservationTensorShape() = x: [10], t: [11]
ObservationTensorLayout() = TensorLayout.CHW
ObservationTensorSize() = 21
MaxGameLength() = 10
ToString() = "python_mfg_crowd_modelling(horizon=10,size=10)"

# State 0
# initial
IsTerminal() = False
History() = []
HistoryString() = ""
IsChanceNode() = True
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.CHANCE
InformationStateString(0) = ""
ObservationString(0) = "initial"
ObservationTensor(0).x: ◯◯◯◯◯◯◯◯◯◯
ObservationTensor(0).t: ◉◯◯◯◯◯◯◯◯◯◯
ChanceOutcomes() = [(0,0.1), (1,0.1), (2,0.1), (3,0.1), (4,0.1), (5,0.1), (6,0.1), (7,0.1), (8,0.1), (9,0.1)]
LegalActions() = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
StringLegalActions() = ["init_state=0", "init_state=1", "init_state=2", "init_state=3", "init_state=4", "init_state=5", "init_state=6", "init_state=7", "init_state=8", "init_state=9"]

# Apply action "init_state=5"
action: 5

# State 1
# (5, 0)
IsTerminal() = False
History() = [5]
HistoryString() = "5"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.DEFAULT_PLAYER_ID
InformationStateString(0) = "5"
ObservationString(0) = "(5, 0)"
ObservationTensor(0).x: ◯◯◯◯◯◉◯◯◯◯
ObservationTensor(0).t: ◉◯◯◯◯◯◯◯◯◯◯
Rewards() = [3.30259]
Returns() = [3.30259]
LegalActions() = [0, 1, 2]
StringLegalActions() = ["-1", "0", "1"]

# Apply action "0"
action: 1

# State 2
# (5, 0)_a_mu
IsTerminal() = False
History() = [5, 1]
HistoryString() = "5, 1"
IsChanceNode() = True
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.CHANCE
InformationStateString(0) = "5, 1"
ObservationString(0) = "(5, 0)_a_mu"
ObservationTensor(0).x: ◯◯◯◯◯◉◯◯◯◯
ObservationTensor(0).t: ◉◯◯◯◯◯◯◯◯◯◯
ChanceOutcomes() = [(0,0.333333), (1,0.333333), (2,0.333333)]
LegalActions() = [0, 1, 2]
StringLegalActions() = ["-1", "0", "1"]

# Apply action "0"
action: 1

# State 3
# (5, 1)_a
IsTerminal() = False
History() = [5, 1, 1]
HistoryString() = "5, 1, 1"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.MEAN_FIELD
InformationStateString(0) = "5, 1, 1"
ObservationString(0) = "(5, 1)_a"
ObservationTensor(0).x: ◯◯◯◯◯◉◯◯◯◯
ObservationTensor(0).t: ◯◉◯◯◯◯◯◯◯◯◯
Rewards() = [0]
Returns() = [3.30259]
DistributionSupport() = ['(0, 1)_a', '(1, 1)_a', '(2, 1)_a', '(3, 1)_a', '(4, 1)_a', '(5, 1)_a', '(6, 1)_a', '(7, 1)_a', '(8, 1)_a', '(9, 1)_a']

# Set mean field distribution to be uniform
action: update_distribution

# State 4
# (5, 1)
IsTerminal() = False
History() = [5, 1, 1]
HistoryString() = "5, 1, 1"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.DEFAULT_PLAYER_ID
InformationStateString(0) = "5, 1, 1"
ObservationString(0) = "(5, 1)"
ObservationTensor(0).x: ◯◯◯◯◯◉◯◯◯◯
ObservationTensor(0).t: ◯◉◯◯◯◯◯◯◯◯◯
Rewards() = [3.30259]
Returns() = [6.60517]
LegalActions() = [0, 1, 2]
StringLegalActions() = ["-1", "0", "1"]

# Apply action "-1"
action: 0

# State 5
# Apply action "-1"
action: 0

# State 6
# (3, 2)_a
IsTerminal() = False
History() = [5, 1, 1, 0, 0]
HistoryString() = "5, 1, 1, 0, 0"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.MEAN_FIELD
InformationStateString(0) = "5, 1, 1, 0, 0"
ObservationString(0) = "(3, 2)_a"
ObservationTensor(0).x: ◯◯◯◉◯◯◯◯◯◯
ObservationTensor(0).t: ◯◯◉◯◯◯◯◯◯◯◯
Rewards() = [0]
Returns() = [6.60517]
DistributionSupport() = ['(0, 2)_a', '(1, 2)_a', '(2, 2)_a', '(3, 2)_a', '(4, 2)_a', '(5, 2)_a', '(6, 2)_a', '(7, 2)_a', '(8, 2)_a', '(9, 2)_a']

# Set mean field distribution to be uniform
action: update_distribution

# State 7
# (3, 2)
IsTerminal() = False
History() = [5, 1, 1, 0, 0]
HistoryString() = "5, 1, 1, 0, 0"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.DEFAULT_PLAYER_ID
InformationStateString(0) = "5, 1, 1, 0, 0"
ObservationString(0) = "(3, 2)"
ObservationTensor(0).x: ◯◯◯◉◯◯◯◯◯◯
ObservationTensor(0).t: ◯◯◉◯◯◯◯◯◯◯◯
Rewards() = [2.80259]
Returns() = [9.40776]
LegalActions() = [0, 1, 2]
StringLegalActions() = ["-1", "0", "1"]

# Apply action "1"
action: 2

# State 8
# Apply action "0"
action: 1

# State 9
# (4, 3)_a
IsTerminal() = False
History() = [5, 1, 1, 0, 0, 2, 1]
HistoryString() = "5, 1, 1, 0, 0, 2, 1"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.MEAN_FIELD
InformationStateString(0) = "5, 1, 1, 0, 0, 2, 1"
ObservationString(0) = "(4, 3)_a"
ObservationTensor(0).x: ◯◯◯◯◉◯◯◯◯◯
ObservationTensor(0).t: ◯◯◯◉◯◯◯◯◯◯◯
Rewards() = [0]
Returns() = [9.40776]
DistributionSupport() = ['(0, 3)_a', '(1, 3)_a', '(2, 3)_a', '(3, 3)_a', '(4, 3)_a', '(5, 3)_a', '(6, 3)_a', '(7, 3)_a', '(8, 3)_a', '(9, 3)_a']

# Set mean field distribution to be uniform
action: update_distribution

# State 10
# Apply action "0"
action: 1

# State 11
# Apply action "-1"
action: 0

# State 12
# Set mean field distribution to be uniform
action: update_distribution

# State 13
# Apply action "-1"
action: 0

# State 14
# Apply action "-1"
action: 0

# State 15
# Set mean field distribution to be uniform
action: update_distribution

# State 16
# Apply action "1"
action: 2

# State 17
# Apply action "1"
action: 2

# State 18
# Set mean field distribution to be uniform
action: update_distribution

# State 19
# Apply action "0"
action: 1

# State 20
# Apply action "-1"
action: 0

# State 21
# Set mean field distribution to be uniform
action: update_distribution

# State 22
# Apply action "0"
action: 1

# State 23
# Apply action "0"
action: 1

# State 24
# Set mean field distribution to be uniform
action: update_distribution

# State 25
# Apply action "-1"
action: 0

# State 26
# Apply action "-1"
action: 0

# State 27
# Set mean field distribution to be uniform
action: update_distribution

# State 28
# Apply action "-1"
action: 0

# State 29
# Apply action "0"
action: 1

# State 30
# (9, 10)_a
IsTerminal() = True
History() = [5, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 2, 1, 0, 1, 1, 0, 0, 0, 1]
HistoryString() = "5, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 2, 1, 0, 1, 1, 0, 0, 0, 1"
IsChanceNode() = False
IsSimultaneousNode() = False
CurrentPlayer() = PlayerId.TERMINAL
InformationStateString(0) = "5, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 2, 1, 0, 1, 1, 0, 0, 0, 1"
ObservationString(0) = "(9, 10)_a"
ObservationTensor(0).x: ◯◯◯◯◯◯◯◯◯◉
ObservationTensor(0).t: ◯◯◯◯◯◯◯◯◯◯◉
Rewards() = [0]
Returns() = [28.1259]
